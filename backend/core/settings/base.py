"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
BASE_DIR = Path(__file__).resolve().parent.parent.parent
SECRET_KEY = config('SECRET_KEY')
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    'rest_framework',
    'rest_framework.authtoken', 
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist', 
    'djoser',
    'dj_rest_auth', 
    'django_filters',
    "corsheaders", 
    'drf_yasg', 
    'import_export', 
    "social_django", 
    'sslserver', 
    
    'accounts',
    'stock',
]

SITE_ID = 1 
CORS_ALLOW_CREDENTIALS = True

SESSION_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'social_django.middleware.SocialAuthExceptionMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
                'social_django.context_processors.backends', 
                'social_django.context_processors.login_redirect', 
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_TZ = True
STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'build/static')]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = 'media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
REST_FRAMEWORK = {
    
    'DEFAULT_PERMISSION_CLASSES' : (
        'rest_framework.permissions.IsAuthenticated',
    ),
    
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    'EXCEPTION_HANDLER': 'core.views.custom_exception_handler',
}

from datetime import timedelta

SIMPLE_JWT = {
    
    'AUTH_HEADER_TYPES': ('Bearer',),

    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION', 
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY, 
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),

    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,

    "TOKEN_OBTAIN_SERIALIZER": "accounts.serializers.MyTokenObtainPairSerializer",

    "AUTH_TOKEN_CLASSES" : (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

AUTH_USER_MODEL = "accounts.UserAccount"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')  
EMAIL_PORT = 587   
EMAIL_USE_TLS = True   
EMAIL_HOST_USER = config('EMAIL_HOST_USER') 
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD') 

DJOSER = {
    'LOGIN_FIELD' : 'email',
    'SET_USERNAME_RETYPE' : True, 
    'SET_PASSWORD_RETYPE' : True, 
    'USER_CREATE_PASSWORD_RETYPE' : True, 
    'USERNAME_CHANGED_EMAIL_CONFIRMATION' : True, 
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION' : True, 
    'SEND_CONFIRMATION_EMAIL': True, 
    'SEND_ACTIVATION_EMAIL' : True, 
    'PASSWORD_RESET_CONFIRM_URL' : 'auth/password/reset/confirm/{uid}/{token}', 
    'USERNAME_RESET_CONFIRM_URL' : 'auth/email/reset/confirm/{uid}/{token}', 
    'PASSWORD_RESET_CONFIRM_RETYPE' : True, 
    'USERNAME_RESET_CONFIRM_RETYPE' : True, 
    'ACTIVATION_URL': 'auth/activate/{uid}/{token}', 
    'TOKEN_MODEL' : None, 
    'SOCIAL_AUTH_TOKEN_STRATEGY':  'djoser.social.token.jwt.TokenStrategy', 
    'SOCIAL_AUTH_ALLOWED_REDIRECT_URIS': ["https://127.0.0.1:3000/auth/google-auth","https://127.0.0.1:3000/auth/linkedin-auth","https://127.0.0.1:3000/auth/facebook-auth","https://127.0.0.1:3000/auth/instagram-auth","https://127.0.0.1:3000/auth/github-auth","http://127.0.0.1:3000/auth/google-auth","http://127.0.0.1:3000/auth/linkedin-auth","http://127.0.0.1:3000/auth/facebook-auth","http://127.0.0.1:3000/auth/instagram-auth","http://127.0.0.1:3000/auth/github-auth","https://stock-client-ehkarabas.netlify.app/auth/google-auth", "https://stock-client-ehkarabas.netlify.app/auth/linkedin-auth", "https://stock-client-ehkarabas.netlify.app/auth/github-auth"], 
    'SERIALIZERS': {
        'user_create': "accounts.serializers.CustomUserCreateSerializer",
        'activation': 'accounts.serializers.CustomActivationSerializer',
        'user': "accounts.serializers.CustomUserUpdateSerializer",
        'current_user': 'accounts.serializers.CustomUserSerializer',
        'user_delete': "djoser.serializers.UserDeleteSerializer",
    },
}

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    
    'social_core.backends.instagram.InstagramOAuth2',
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.linkedin.LinkedinOAuth2',
    
    'django.contrib.auth.backends.ModelBackend', 
)
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details', 
    'social_core.pipeline.social_auth.social_uid', 
    'social_core.pipeline.social_auth.social_user', 
    'social_core.pipeline.user.get_username', 
    'social_core.pipeline.social_auth.associate_by_email', 
    'social_core.pipeline.user.create_user', 
    'social_core.pipeline.social_auth.associate_user', 
    'social_core.pipeline.social_auth.load_extra_data', 
    'social_core.pipeline.user.user_details', 
    'accounts.social.save_profile', 
)

REST_AUTH = {
    'TOKEN_SERIALIZER': 'user.serializers.UserTokenSerializer',
}

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('GOOGLE_OAUTH_CLIENT_ID')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('GOOGLE_OAUTH_CLIENT_SECRET')
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    "https://www.googleapis.com/auth/userinfo.email",
    "https://www.googleapis.com/auth/userinfo.profile",
    'openid'
]
SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['first_name', 'last_name', ("image","picture")]

SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = config('LINKEDIN_OAUTH_CLIENT_ID')
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = config('LINKEDIN_OAUTH_CLIENT_SECRET')
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_emailaddress','r_liteprofile']
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ["emailAddress", "localizedFirstName", "localizedLastName","profilePicture"]
SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [
    ('emailAddress', 'email'),
    ('localizedFirstName', 'first_name'),
    ('localizedLastName', 'last_name'),
    ('profilePicture', 'image'),
]

SOCIAL_AUTH_GITHUB_KEY = config('GITHUB_OAUTH_CLIENT_ID')
SOCIAL_AUTH_GITHUB_SECRET = config('GITHUB_OAUTH_CLIENT_SECRET')
SOCIAL_AUTH_GITHUB_SCOPE = ['read:user', "user:email"]
